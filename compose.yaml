services:
  traefik:
    container_name: traefik
    image: traefik:latest
    restart: unless-stopped
    networks:
      - traefik-public
    ports:
      - 80:80
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik.yml:/etc/traefik/traefik.yml
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik.rule=Host("traefik.${DOMAINE}")
      - traefik.http.routers.traefik.service=api@internal

  web:
    container_name: web
#    build: .
    image: markavreliy/pyforum:v3
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      - backend-db
    networks:
      - traefik-public
      - backend-private
    labels:
      - traefik.enable=true
      - traefik.http.routers.web.rule=Host("web.${DOMAINE}")
      - traefik.http.services.web.loadbalancer.server.port=8000
      - traefik.docker.network=traefik-public

  backend-db:
    container_name: backend-db
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${PG_DB}
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
    networks:
      - backend-private
    volumes:
      - db-data:/var/lib/postgresql/data

volumes:
  db-data:

networks:
  traefik-public:
    name: traefik-public
  backend-private:
    name: backend-private