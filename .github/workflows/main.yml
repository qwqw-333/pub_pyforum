name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  packages: write

jobs:
  
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: forum
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run migrations and tests
      run: |
        python manage.py makemigrations authentication
        python manage.py migrate authentication
        python manage.py makemigrations profiles
        python manage.py migrate profiles
        python manage.py makemigrations
        python manage.py migrate
        python manage.py test
      env:
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        PG_DB: forum
        PG_USER: postgres
        PG_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        DB_HOST: localhost
        DB_PORT: 5432
        PGADMIN_EMAIL: admin@admin.com
        PGADMIN_PASSWORD: ${{ secrets.PGADMIN_PASSWORD }}
        DJANGO_SUPERUSER_EMAIL: admin@mail.net
        DJANGO_SUPERUSER_USERNAME: admin
        DJANGO_SUPERUSER_PASSWORD: ${{ secrets.DJANGO_SUPERUSER_PASSWORD }}
        EMAIL_BACKEND: django.core.mail.backends.smtp.EmailBackend
        EMAIL_HOST: someuser@gmail.com
        EMAIL_PORT: 587
        EMAIL_USE_TLS: 1
        EMAIL_HOST_USER: test@test.com
        EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
        CORS_ORIGIN_WHITELIST: ""
  
  build-app:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push App image
      uses: docker/build-push-action@v4
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ghcr.io/${{ github.repository }}/app:latest
  
  build-nginx:
      needs: test
      runs-on: ubuntu-latest
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      
      steps:
      - name: Checkout code
        uses: actions/checkout@v3
  
      - name: Check for Nginx config changes
        id: nginx_changes
        run: |
          git fetch origin main
          CHANGED=$(git diff --name-only origin/main..HEAD -- devops/aws/nginx)
          if [ -n "$CHANGED" ]; then
            echo "NGINX_CHANGED=true" >> $GITHUB_OUTPUT
          else
            echo "NGINX_CHANGED=false" >> $GITHUB_OUTPUT
          fi
  
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        if: steps.nginx_changes.outputs.NGINX_CHANGED == 'true'
  
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        if: steps.nginx_changes.outputs.NGINX_CHANGED == 'true'
  
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        if: steps.nginx_changes.outputs.NGINX_CHANGED == 'true'
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
  
      - name: Build and push Nginx image
        uses: docker/build-push-action@v4
        if: steps.nginx_changes.outputs.NGINX_CHANGED == 'true'
        with:
          context: devops/aws/nginx
          file: devops/aws/nginx/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/nginx:latest
            ghcr.io/${{ github.repository }}/nginx:${{ github.sha }}
